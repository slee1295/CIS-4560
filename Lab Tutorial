
CIS4560 Term Project Tutorial 
Lab Tutorial 
MLAB ANALYSIS USING HIVE AND GOOGLE BIGQUERY
________________________________________

Objectives
List what your objectives are. In this hands-on lab, you will learn how to:
•	Create Big Insights cluster
•	Get data manually with Big Insights
•	Analyze data with hive
•	Analyze data with Google BigQuery
•	Using excel maps and power view to visualize data


Data Description
The objective of this report will be to identify the fastest and slowest broadband connections as well as the performance issues in the last-mile network and end-systems that are most common among these broadband connections based on their network performance. During the course of bulk data transfers, NPAD gathers the performance regulating mechanisms and other detailed statistics for the NPAD server to collect test results along with other network transfer protocols (i.e. IP addresses, download/upload speeds, packet headers, and TCP variables).

Platform Specifications
IBM Bluemix BigInsights
 
Step 1: Create Cluster and Get Data
Create an Apache Hadoop Cluster with IBM Bluemix.

1. Launch IBM Bluemix. Go to “Data and Analytics” and then click on a tile “BigInsights for Apache Hadoop.” Select “Manage Cluster” and add a new cluster. 
 
2. Leave the default configuration and select Spark, Pig, Sqoop and Flume.
 
3. Copy the ssh host address and use Putty to connect to your cluster
 
4. Enter your username and password

5. Use the following command to get the data:
-bash-4.1$ wget -r https://storage.googleapis.com/m-lab/experimental-hive-csv/2015-01-01.csv.gz
 
Step 2: Run Unix Commands and Hive Queries
Use Big Insights to retrieve data and use Hive to analyze the data.

1. Command to list of files:
-bash-4.1$ ls 

2. To access the directory where the .csv file is located:
-bash-4.1$ cd storage.googleapis.com
-bash-4.1$ cd m-lab
-bash-4.1$ cd experimental-hive-csv

3. To unzip the file:
-bash-4.1$ gunzip 2015-01-01.csv.gz

4. To check the size of the file:
-bash-4.1$ ls -lah
 
5. To create a folder called “mlab”
hdfs dfs -mkdir mlab

6. To move the .csv file to the mlab folder:
hdfs dfs -put 2015-01-01.csv mlab

7. To list files in the mlab directory:
hdfs dfs -ls mlab

8. To change permissions on the mlab directory:
hdfs dfs -chmod +rwx /user/cis4560/mlab/

9. To created a folder called “results”
hdfs dfs -mkdir results

10. Check Ambari to ensure the .csv file is on the mlab folder:
 
11. Open Hive with the following command:
$hive 

12. Create a table called mlab:
$hive create table mlab 
(test_id string,
connection_spec_server_ip bigint,
connection_spec_client_ip bigint,
connection_spec_client_os string,
connection_spec_client_browser string,
connection_spec_client_application string,
connection_spec_client_geolocation_continent_code string,
connection_spec_client_geolocation_country_name string,
connection_spec_client_geolocation_city	 string,
connection_spec_client_geolocation_latitude bigint,
connection_spec_client_geolocation_longitude bigint,
connection_spec_server_geolocation_continent_code string,
connection_spec_server_geolocation_country_name string,
connection_spec_server_geolocation_city string,
connection_spec_server_geolocation_latitude bigint,
connection_spec_server_geolocation_longitude bigint) 
ROW FORMAT DELIMITED 
FIELDS TERMINATED BY ',' 
STORED AS TEXTFILE LOCATION '/user/cis4560/results'
TBLPROPERTIES("skip.header.line.count"="1");

13. Show all tables in hive:
$hive show tables;
 
14. Load the data in the .csv file into the mlab table we created:
$hive LOAD DATA INPATH '/user/cis4560/mlab/2015-01-01.csv' OVERWRITE INTO TABLE mlab;

15. Show details of the mlab table:
$hive describe mlab;
 
16. To ensure the data was transferred. Run this query to show 3 records of the table:
$hive select * from mlab limit 3;

17. Count all records from the table:
SELECT COUNT(*) FROM mlab;

18. Show 10 records where the country name is ‘United States’:
SELECT *
FROM mlab
WHERE connection_spec_client_geolocation_country_name = 'United States '
LIMIT 10;

19. Show the count where the country name is ‘United States’:
SELECT COUNT(*)
FROM mlab
WHERE connection_spec_client_geolocation_country_name = 'United States ';

20. Show 10 records where the country name is not Null:
SELECT *
FROM mlab
WHERE connection_spec_client_geolocation_country_name IS NOT NULL
LIMIT 10;

21. Show the count where the country name is not Null:
SELECT COUNT(*)
FROM mlab
WHERE connection_spec_client_os IS NOT NULL;
 
22. Show 10 records where the client OS is not null:
SELECT *
FROM mlab
WHERE connection_spec_client_os IS NOT NULL
LIMIT 10;

Step 2: Alternatively Use Google BigQuery
Alternatively to hive, you can use Google’s BigQuery. To use Google BigQuery, follow these steps:
Step 1. Configure Google Cloud Platform Console Project
Create a project, and enable billing in Google Cloud Platform Console (or use an existing project with billing enabled).

Step 2. Configure M-Lab Table Access
Join the M-Lab Discuss group with the same account you used to create your Google Cloud Platform Console project. Joining this group enables your account so that you can make queries against M-Lab’s BigQuery tables.

Step 3. To query from the web interface, go to:
https://bigquery.cloud.google.com

4. Try the following query to calculate how many NDT tests were performed per day since M-Lab epoch.
SELECT STRFTIME_UTC_USEC(web100_log_entry.log_time * 1000000, '%Y-%m-%d') AS day,
COUNT(*) AS num_tests
FROM plx.google:m_lab.ndt.all
GROUP BY day
ORDER BY day ASC;

5. Try the following query to pull three the records from the mlab table:
SELECT * FROM plx.google:m_lab.ndt.all LIMIT 3;

6. Try the following query to calculate how many distinct users (distinct IPs, for simplicity) have ever run an NDT test.
SELECT COUNT(DISTINCT web100_log_entry.connection_spec.remote_ip) AS num_clients
FROM plx.google:m_lab.ndt.all
WHERE web100_log_entry.connection_spec.remote_ip IS NOT NULL;

7. Try the following query to compute how the number of users changed over time.
SELECT STRFTIME_UTC_USEC(web100_log_entry.log_time * INTEGER(POW(10, 6)), '%Y-%m-%d') AS day,
COUNT(DISTINCT web100_log_entry.connection_spec.remote_ip) AS num_clients
FROM plx.google:m_lab.ndt.all
WHERE web100_log_entry.connection_spec.remote_ip IS NOT NULL
GROUP BY day
ORDER BY day ASC;

8. Try the following query to aggregate the client IP addresses into /24s and counts the number of unique /24s that have ever initiated at least one NDT test.

SELECT COUNT(DISTINCT FORMAT_IP(PARSE_IP(web100_log_entry.connection_spec.remote_ip) & INTEGER(POW(2, 32) - POW(2, 32 - 24)))) AS num_subnets
FROM plx.google:m_lab.ndt.all

9. This query computes the number of distinct IP addresses that have run tests using both NDT and NPAD
SELECT COUNT(*) AS num_ip_addresses
FROM (
SELECT npad.web100_log_entry.connection_spec.remote_ip,
FROM plx.google:m_lab.npad.all AS npad
JOIN plx.google:m_lab.npad.all AS ndt
ON (npad.web100_log_entry.connection_spec.remote_ip = ndt.web100_log_entry.connection_spec.remote_ip)
GROUP BY npad.web100_log_entry.connection_spec.remote_ip)

10. Show 10 records where the client OS is not null:
SELECT COUNT(*)
FROM plx.google:m_lab.ndt.all
WHERE connection_spec.client_os IS NOT NULL;

11. Show 100 records where the client OS is ‘Windows’:
SELECT *
FROM plx.google:m_lab.ndt.all
WHERE connection_spec.client_os = 'Windows'
LIMIT 100;

12. Show 100 records where the country is not null:
SELECT *
FROM plx.google:m_lab.ndt.all
WHERE connection_spec.client_geolocation.country_name IS NOT NULL
LIMIT 100;

13. Show 100 records where the country is ‘United States’:
SELECT *
FROM plx.google:m_lab.ndt.all
WHERE connection_spec.client_geolocation.country_name = "United States"
LIMIT 100;
 
Step 3: Visualization
Use Excel features to visualize your data.
1. You can download the data directly from Google BigQuery by selecting “Download a CSV”
The data extracted will be 100 records where the country equals “United States”

2. Open Excel and get the data from CSV

3. Open 3D Maps in Excel
 
4. Select the connection by City to display results on the map

Additionally, you can download more data from Google BigQuery. In this case, the data extracted will be 100 records where the country is not null:
 
1. Open excel and load the CSV data. Then, open Power View under the insert tab.

2. Drag the Client_geolocation_country to the LOCATIONS filter. You will be able to visualize the countries on the map.

3.	To visualize location type of results on map, convert csv file to excel and click on map button under insert tab. 

References
1. Full data source:  https://console.cloud.google.com/storage/browser/m-lab/experimental-hive-csv?pli=1
2. References: https://aws.amazon.com/datasets/m-lab-dataset-network-path-and-application-diagnosis-tool-npad/?_encoding=UTF8&jiveRedirect=1
https://www.measurementlab.net/data/docs/bq/quickstart/
